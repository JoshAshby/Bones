#!/usr/bin/env ruby
# frozen_string_literal: true

require "tty-option"
require_relative "../env.rb"

# I spent way too much time on this setup ... is there a better way to do this?
# See lib/bones/cli/ for the actual commands
class CommandMapper
  include TTY::Option

  COMMANDS = {
    "create" => Bones::Cli::CreateUserCommand
  }.freeze

  usage do
    no_command # This doesn't seem to work
    command nil # And this causes two spaces in the output :|

    footer "Run a command followed by --help to see more info"
  end

  flag :help do
    short "-h"
    long "--help"
    desc "Print usage"
  end

  argument :command do
    required
    permit COMMANDS.keys
  end

  def run
    if params[:help]
      commands = COMMANDS.map do |(k, v)|
        "  #{k}\t#{v.desc.flatten.join}\n"
      end.join("\n")

      helper = help do |sections|
        sections.add_after :options, :commands,
                           "\nCommands:\n#{commands}"
      end

      print helper
      exit
    end

    unless params.valid?
      puts params.errors.summary
      exit
    end

    COMMANDS[params[:command]].new.parse.run
  end
end

cmd = CommandMapper.new
cmd.parse([ARGV.shift || "--help"])
cmd.run
